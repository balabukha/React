import React from 'react';
import {connect} from 'react-redux';
import {Link} from 'react-router';
import R from 'ramda';

import {getBasketPhonesWithCount, getTotalBasketPrice} from '../../selectors';

import {
    removePhoneFromBasket,
    basketCheckout,
    clearBasket
} from '../../actions'

const Basket = ({
                    phones,
                    totalPrice,
                    removePhoneFromBasket,
                    basketCheckout,
                    clearBasket
}) => {
    const isBasketEmpty = R.isEmpty(phones);

    const renderContent = () => (
        <div>
            {isBasketEmpty && <div>Your shopping cart is empty</div>}

            <div className="table-responsive">
                <table className="table-bordered table-striped table-condensed cf">
                    <tbody>
                    {phones.map((phone, i) => (
                        <tr
                        key={i}
                        className="item-checout"
                        >
                            <td className="first-column-checkout">
                                <img
                                    src={phone.image}
                                    alt={phone.name}
                                    className="img-thumbnail"
                                />
                            </td>
                            <td>{phone.name}</td>
                            <td>{phone.price}</td>
                            <td>{phone.count}</td>
                            <td><span
                                onClick={()=>removePhoneFromBasket(phone.id)}
                                className="delete-cart"
                                />
                            </td>
                        </tr>
                    ))}
                    </tbody>
                </table>
            </div>
            {
                R.not(isBasketEmpty) &&
                <div className="row">
                    <div className="pull-right total-user-checkout">
                        <b>Total:</b>
                        ${totalPrice}
                    </div>
                </div>
            }
        </div>
    );

    const renderSidebar = () => {
        return (
            <div>
                <Link
                    to="/"
                    className="btn btn-info"
                >
                    <span className="gliphicon glyphicon-info-sign"/>
                    <span>Continue shopping</span>
                </Link>

                {
                    R.not(isBasketEmpty) &&
                        <div>
                            <button
                                onClick={clearBasket}
                                className="btn btn-danger"
                            >
                                <span className="glyphicon glyphicon-trash"/>
                                Clear cart
                            </button>
                            <button
                                className="btn btn-success"
                                onClick={()=> basketCheckout(phones)}
                            >
                                <span className="glyphicon glyphicon-envelope"/>
                                Checkout
                            </button>
                        </div>
                }
            </div>
        )
    };

    return (
        <div>
            <div className="view-container">
                <div className="container">
                    <div className="row">
                        <div className="col-md-9">
                            {renderContent()}
                        </div>
                        <div className="col-md-3 btn-user-checkout">
                            {renderSidebar()}
                        </div>
                    </div>
                </div>
            </div>
        </div>
        )
};

const mapStateToProps = state => ({
    phones: getBasketPhonesWithCount(state),
    totalPrice: getTotalBasketPrice(state)
});

const mapDispatchToProps = {
    removePhoneFromBasket,
    basketCheckout,
    clearBasket
};

export default connect(mapStateToProps, mapDispatchToProps)(Basket);